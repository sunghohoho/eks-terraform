objstoreConfig: |-
  type: s3
  config:
    bucket: ${thanos_s3}
    endpoint: "s3.${region}.amazonaws.com"
# existingObjstoreSecret: ${s3_object_secret}

query:
  enabeld: true
  dnsDiscovery:
    enabled: false
  stores:       # prometheus 검색을 위한 discovery svc 입력해야 정상적으로 prometheus 쿼리 가능, https://thanos.io/tip/thanos/service-discovery.md/#static-flags
    - dnssrv+_grpc._tcp.prometheus-kube-prometheus-thanos-discovery.monitoring.svc

queryFrontend:
  enabled: true
  ingress:
    enabled: true
    hostname: "thanos.gguduck.com"
    ingressClassName: nginx
    annotations:
        ingress.annotations.nginx.ingress.kubernetes.io/proxy-buffer-size: 128k

bucketweb:
  enabled: true
  serviceAccount:       # bucket access를 위한 service account 구성
    create: true
    name: "thanos-bucketweb"
    annotations:
        eks.amazonaws.com/role-arn: ${thanos_role}
  ingress:
    enabled: true
    hostname: "bucket.gguduck.com"
    ingressClassName: nginx
    annotations:
        ingress.annotations.nginx.ingress.kubernetes.io/proxy-buffer-size: 128k

compactor:
  enabled: true
  serviceAccount:       # bucket access를 위한 service account 구성
    create: true
    name: "thanos-compactor"
    annotations:
        eks.amazonaws.com/role-arn: ${thanos_role}
  ingress:
    enabled: true
    hostname: "compactor.gguduck.com"
    ingressClassName: nginx
    annotations:
        ingress.annotations.nginx.ingress.kubernetes.io/proxy-buffer-size: 128k

storegateway:
  serviceAccount:       # bucket access를 위한 service account 구성
    create: true
    name: "thanos-storegateway"
    annotations:
        eks.amazonaws.com/role-arn: ${thanos_role}
  enabled: true

ruler:
  ingress:
    enabled: true
    hostname: "ruler.gguduck.com"
    ingressClassName: nginx
    annotations:
        ingress.annotations.nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
  enabled: true
  alertmanagers:
    - ${alert_url}
  config: |-
    groups:
      - name: "metamonitoring"
        rules:
          - alert: "PrometheusDown"
            expr: absent(up{prometheus="monitoring/kube-prometheus"})

metrics:
  enabled: true
  serviceMonitor:
    enabled: true