serviceAccount: 
  create: true
  name: jenkins

persistence:
  enabled: true
  existingClaim: "jenkins-pvc"
  storageClass: "gp3"

agent:
  podTemplates:
    kaniko: |
      - name: kaniko
        namespace: jenkins
        label: kaniko
        serviceAccount: jenkins
        containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:debug
          ttyEnabled: true
          privileged: true
          command: /busybox/cat
    helm: |
      - name: helm
        namespace: jenkins
        label: helm
        serviceAccount: jenkins
        containers:
        - name: helm
          image: alpine/helm:3.11.1
          ttyEnabled: true
          privileged: true
          command: sleep
          args: 99999999
        - name: aws
          image: amazon/aws-cli
          ttyEnabled: true
          privileged: true
          command: sleep
          args: 99999999  

controller:
  admin:
    password: ${server_admin_password}
  ingress:
    enabled: true
    ingressClassName: alb
    hostname: jenkins.gguduck.com
    annotations:
      alb.ingress.kubernetes.io/load-balancer-name: jenkins
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
      external-dns.alpha.kubernetes.io/hostname: jenkins.gguduck.com
  additionalPlugins:
  - github:1.40.0
  - github-branch-source:1807.v50351eb_7dd13
  - job-dsl:1.89
  - pipeline-utility-steps:2.17.0
  - aws-credentials:231.v08a_59f17d742
  JCasC:
    configScripts:
      jenkins-casc-configs: |
        credentials:
          system:
            domainCredentials:
            - credentials:
              - usernamePassword:
                  id: "github"
                  description: "GitHub (sunghohoho)"
                  scope: GLOBAL
                  username: ${github_username}
                  password: ${github_token}
        jobs:
          - script: |
              job('cats-dogs-job') {
                description('A Jenkins job for the cats-dogs-source repository')
                // GitHub 프로젝트 설정
                properties {
                  githubProjectUrl('https://github.com/sunghohoho/cats-dogs-source/')
                }
                // Git 소스 설정
                scm {
                  git {
                    remote {
                      url('https://github.com/sunghohoho/cats-dogs-source.git')
                      credentials('github')
                    }
                    branch('*/main')
                  }
                }
                // GitHub Push 트리거 설정
                triggers {
                  githubPush()
                }
                // 빌드 단계
                steps {
                  shell('echo "hello"')
                }
              }
        jobs:
          - script: >
              pipelineJob('test') {
                description('')
                keepDependencies(false)
                properties {
                  githubProjectUrl('https://github.com/sunghohoho/cats-dogs-source/')
                  pipelineTriggers {
                    triggers {
                      githubPush()
                    }
                  }
                }
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/sunghohoho/cats-dogs-source.git')
                          credentialsId('github')
                        }
                        branches('*/main')
                        extensions {}
                      }
                    }
                    scriptPath('Jenkinsfile')
                    lightweight(true)
                  }
                }
                disabled(false)
              }


