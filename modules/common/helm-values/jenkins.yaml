serviceAccount: 
  create: true
  name: jenkins

persistence:
  enabled: true
  existingClaim: "jenkins-pvc"
  storageClass: "gp3"

controller:
  # initContainerEnv:
  #   - name: JAVA_OPTS
  #     value: "-Dhudson.model.UpdateCenter.xmlUrl=https://updates.jenkins.io/update-center.json"
  updateCenterUrl: "https://updates.jenkins.io/update-center.json"
  jenkinsUrlProtocol: https
  jenkinsUrl: ${hostname}
  admin:
    password: ${server_admin_password}
  ingress:
    enabled: true
    ingressClassName: alb
    hostname: jenkins.gguduck.com
    annotations:
      alb.ingress.kubernetes.io/load-balancer-name: jenkins
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
      external-dns.alpha.kubernetes.io/hostname: ${hostname}
  additionalPlugins:
  - github:1.40.0
  - github-branch-source:1807.v50351eb_7dd13
  - job-dsl:1.89
  - pipeline-utility-steps:2.17.0
  - pipeline-stage-view:2.34
  - dark-theme:479.v661b_1b_911c01
  - blueocean:1.27.16
  - view-job-filters:392.v2c0a_4dd46909
  - keycloak:2.3.2
  JCasC:
    securityRealm: |
      keycloak:
        keycloakJson: |-
          {
            "realm": "${realm}",
            "auth-server-url": "https://sso-dev.gguduck.com/",
            "ssl-required": "external",
            "resource": "jenkins",
            "credentials": {
              "secret": "${keycloak_secret_key}"
            },
            "confidential-port": 0
          }
        keycloakValidate: true
        keycloakRespectAccessTokenTimeout: true
    configScripts:
      jenkins-casc-configs: |
        jenkins:
          views:
          - all:
              name: "all"
          - list:
              name: "Last Aborted"
              recurse: true
              columns:
              - "weather"
              - "status"
              - "jobName"
              - "lastSuccess"
              - "lastFailure"
              - "lastDuration"
              - "buildButton"
              - "favoriteColumn"
              jobFilters:
              - jobTypeFilter:
                  includeExcludeTypeString: "includeMatched"
                  jobType: "org.jenkinsci.plugins.workflow.job.WorkflowJob$DescriptorImpl@34d20aca"
              - mostRecentJobsFilter:
                  checkStartTime: false
                  maxToInclude: 0
              - jobStatusFilter:
                  aborted: true
                  disabled: false
                  failed: false
                  includeExcludeTypeString: "includeMatched"
                  stable: false
                  unstable: false
          - list:
              name: "Last Failed"
              recurse: true
              columns:
              - "status"
              - "weather"
              - "jobName"
              - "lastSuccess"
              - "lastFailure"
              - "lastDuration"
              - "buildButton"
              - "favoriteColumn"
              jobFilters:
              - jobTypeFilter:
                  includeExcludeTypeString: "includeMatched"
                  jobType: "org.jenkinsci.plugins.workflow.job.WorkflowJob$DescriptorImpl@34d20aca"
              - mostRecentJobsFilter:
                  checkStartTime: false
                  maxToInclude: 0
              - jobStatusFilter:
                  aborted: false
                  disabled: false
                  failed: true
                  includeExcludeTypeString: "includeMatched"
                  stable: false
                  unstable: false
          - list:
              name: "cad"
              recurse: true
              columns:
              - "status"
              - "weather"
              - "jobName"
              - "lastSuccess"
              - "lastFailure"
              - "lastDuration"
              - "buildButton"
              - "favoriteColumn"
              includeRegex: "cat/"
        credentials:
          system:
            domainCredentials:
            - credentials:
              - usernamePassword:
                  id: "github"
                  description: "GitHub (sunghohoho)"
                  scope: GLOBAL
                  username: ${github_username}
                  password: ${github_token}
              - string:
                  id: "github-token"
                  scope: GLOBAL
                  description: "GitHub Token for managed hook auth"
                  secret: ${github_token}
        jobs:
          - script: |
              pipelineJob('cats-and-dogs') {
                description('')
                keepDependencies(false)
                properties {
                  githubProjectUrl('https://github.com/sunghohoho/cats-dogs-source/')
                  pipelineTriggers {
                    triggers {
                      githubPush()
                    }
                  }
                }
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/sunghohoho/cats-dogs-source.git')
                          credentials('github')  
                        }
                        branch('*/main') 
                        extensions {}  
                      }
                    }
                    scriptPath('Jenkinsfile')  
                    lightweight(true)  
                  }
                }
                disabled(false)
              }
          - script: |    
              pipelineJob('cats-and-dogs-helm') {
                description('Helm charts are packaged and pushed to ECR Helm OCI when the GitHub repository is updated.')
                keepDependencies(false)
                properties {
                  githubProjectUrl('https://github.com/sunghohoho/cats-and-dogs-helm/')
                  pipelineTriggers {
                    triggers {
                      githubPush()
                    }
                  }
                }
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/sunghohoho/cats-and-dogs-helm.git')
                          credentials('github')  
                        }
                        branch('*/main') 
                        extensions {}  
                      }
                    }
                    scriptPath('Jenkinsfile')  
                    lightweight(true)  
                  }
                }
                disabled(false)
              }
        unclassified:
          githubpluginconfig:
            configs:
            - credentialsId: "github-token"
              name: "sunghohoho"
              apiUrl: "https://api.github.com"
              manageHooks: true

agent:
  podTemplates:
    kaniko: |
      - name: kaniko
        namespace: jenkins
        label: kaniko
        serviceAccount: jenkins
        containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:debug
          ttyEnabled: true
          privileged: true
          command: /busybox/cat
        - name: git
          image: alpine/git:v2.45.2
          ttyEnabled: true
          privileged: true
          command: sleep
          args: 99999999 
    helm: |
      - name: helm
        namespace: jenkins
        label: helm
        serviceAccount: jenkins
        containers:
        - name: helm
          image: alpine/helm:3.11.1
          ttyEnabled: true
          privileged: true
          command: sleep
          args: 99999999
        - name: aws
          image: amazon/aws-cli
          ttyEnabled: true
          privileged: true
          command: sleep
          args: 99999999  
