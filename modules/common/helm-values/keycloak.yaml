# production: true

auth:
  adminUser: ${adminUser}
  adminPassword: ${initialAdminPassword}

ingress:
  enabled: true
  ingressClassName: nginx
  pathType: ImplementationSpecific
  apiVersion: ""
  hostname: ${hostname}
  path: /
  servicePort: http
  annotations:
       ingress.annotations.nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
  labels: {}
  tls: true
  selfSigned: false
  extraHosts: []
  extraPaths: []
  extraTls: []

postgresql:
  auth:
    password: ${postgresPassword}

logging:
  level: DEBUG

# oidc:
#   enabled: true
#   # This should be the same as the `clientID` set in step 3 above
#   clientID: "kubecost"
#   # Find this in Keycloak UI by going to your Kubecost client, then clicking on "Credentials".
#   clientSecret: "c3o6Y6TqS5vk7Ixb2O84z3gWzQDFGJXP"
#   # The k8s secret where clientSecret will be stored
#   secretName: "kubecost-oidc-secret"
#   # The login endpoint for the auth server
#   authURL: "https://kubecost.gguduck.com/realms/myrealm/protocol/openid-connect/auth?client_id=kubecost&response_type=code"
#   # Redirect after authentication
#   loginRedirectURL: "https://kubecost.gguduck.com/model/oidc/authorize"