controller:
  create: false
  name: ${argocd_sa}
configs:
  secret:
    argocdServerAdminPassword: ${server_admin_password}   # master 비밀번호 구성
    extra:
      oidc.keycloak.clientSecret: ${keycloak_secret_key}    # keycloak 로그인을 위한 secret 정보 추가
      accounts.dev-user.password: ${dev_user_password}    # dev 유저 추가
  cm:
    accounts.new-user: login, apiKey
    accounts.new-user.enabled: "true"
    accounts.dev-user: login, apiKey    # dev 유저 추가
    accounts.dev-user.enabled: "true"    # dev 유저 추가
    # keycloak 설정
    annotations:        # keycloak 활성화 설정
      oidc.config: |
        name: Keycloak
        issuer: https://sso-dev.gguduck.com/realms/${realm}
        clientID: argocd
        clientSecret: ${keycloak_secret_key}
        requestedScopes: ["openid", "profile", "email", "groups"]
    url: https://${hostname}
  rbac:   # keycloak group에 argocd admin 부여
    policy.csv: |
      g, ArgoCDAdmins, role:admin
server:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  ingress: 
    enabled: true
    controller: aws
    annotations:
        alb.ingress.kubernetes.io/load-balancer-name: argocd
        # alb.ingress.kubernetes.io/inbound-cidrs: 211.212.235.69/28, 58.239.25.12/27, 222.110.1.253/32
        alb.ingress.kubernetes.io/certificate-arn: ${cert_arn}
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        external-dns.alpha.kubernetes.io/hostname: ${hostname}
        alb.ingress.kubernetes.io/backend-protocol: HTTPS
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/ssl-redirect: '443'
        # alb.ingress.kubernetes.io/tags: Environment=helm,Team=devops
    ingressClassName: alb
    hostname: ${hostname}
    path: /
    aws:
      backendProtocolVersion: GRPC
      serviceType: ClusterIP
