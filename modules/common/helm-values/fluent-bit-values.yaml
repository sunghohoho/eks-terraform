serviceAccount:
    create: true
    name: fluent-bit
    annotations:
        eks.amazonaws.com/role-arn: ${fluent-bit-role}
        meta.helm.sh/release-namespace: logging
        app.kubernetes.io/managed-by: Helm

config:
  inputs: |
    [INPUT]
        Name             tail
        Path             /var/log/containers/*.log
        Exclude_Path     /var/log/containers/*_kube-system_*,/var/log/containers/*_argocd_*,/var/log/containers/*_ingress-nginx_*,/var/log/containers/*_monitoring_*,/var/log/containers/*_thanos_*,/var/log/containers/*_sonarqube_*,/var/log/containers/*_kubecost_*,/var/log/containers/*_logging_*,/var/log/containers/*_nvidia_*
        multiline.parser docker, cri
        Tag              kube.*
        Mem_Buf_Limit    5MB
        Skip_Long_Lines  On
  filters: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
    [FILTER]
        Name   rewrite_tag
        Match  kube.*
        Rule   $kubernetes['namespace_name'] ^(.*)$ namespace.$0 false
    [FILTER]
        Name   rewrite_tag
        Match  namespace.*
        Rule   $kubernetes['labels']['app.kubernetes.io/name'] ^(.*)$ app.$0.$TAG false
    [FILTER]
        Name   rewrite_tag
        Match  app.*
        Rule   $kubernetes['container_name'] ^(.*)$ container.$0.$TAG false
  outputs: |
    [OUTPUT]
        Name           es
        Match          *
        Host           ${es_host}
        Port           443
        Suppress_Type_Name On
        Retry_Limit    False
        tls            On
        tls.verify     Off
        HTTP_User      ${es_user}
        HTTP_Passwd    ${es_password}
